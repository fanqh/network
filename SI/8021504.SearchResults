---- mac_addr Matches (28 in 7 files) ----
Frame.c (wsn):    *p++ = pInfo->mac_addr & 0xff; //src address
Frame.c (wsn):    *p++ = pInfo->mac_addr >> 8;
Frame.c (wsn):    *p++ = pInfo->mac_addr & 0xff; //source address
Frame.c (wsn):    *p++ = pInfo->mac_addr >> 8;
Frame.c (wsn):    *p++ = pInfo->mac_addr & 0xff; //source address
Frame.c (wsn):    *p++ = pInfo->mac_addr >> 8;
Frame.c (wsn):    *p++ = pInfo->mac_addr & 0xff; //source address
Frame.c (wsn):    *p++ = pInfo->mac_addr >> 8;
Frame.c (wsn):    *p++ = pInfo->mac_addr & 0xff; //src address
Frame.c (wsn):    *p++ = pInfo->mac_addr >> 8;
Frame.c (wsn):    *p++ = pInfo->mac_addr & 0xff; //source address
Frame.c (wsn):    *p++ = pInfo->mac_addr >> 8;
Gateway.c (wsn):    gw_info.mac_addr = GW_MAC_ADDR;
Gateway.c (wsn):    gw_info.dsn = gw_info.mac_addr & 0xff;
Gateway.h (wsn):    unsigned short mac_addr; //mac addr of the gateway
Node.c (wsn):    node_info.mac_addr = NODE_MAC_ADDR;
Node.c (wsn):    node_info.dsn = node_info.mac_addr & 0xff;
Node.c (wsn):            if (dst_addr == node_info.mac_addr)
Node.c (wsn):                node_info.wakeup_tick = now + ((Rand()+node_info.mac_addr) & BACKOFF_MAX_NUM)*BACKOFF_UNIT*TickPerUs;
Node.c (wsn):                node_info.wakeup_tick = now + ((Rand()+node_info.mac_addr) & BACKOFF_MAX_NUM)*BACKOFF_UNIT*TickPerUs;
Node.h (wsn):    unsigned short mac_addr; //mac address of this node
Pallet.c (wsn):    pallet_info.mac_addr = PALLET_MAC_ADDR;
Pallet.c (wsn):    pallet_info.dsn = pallet_info.mac_addr & 0xff;
Pallet.c (wsn):            if (pallet_info.mac_addr == FRAME_GET_DST_ADDR_NODE_REQ(rx_packet)) 
Pallet.c (wsn):            if (dst_addr == pallet_info.mac_addr) {
Pallet.c (wsn):                pallet_info.wakeup_tick = now + ((Rand()+pallet_info.mac_addr) & BACKOFF_MAX_NUM)*BACKOFF_UNIT*TickPerUs;
Pallet.c (wsn):                pallet_info.wakeup_tick = now + ((Rand()+pallet_info.mac_addr) & BACKOFF_MAX_NUM)*BACKOFF_UNIT*TickPerUs;
Pallet.h (wsn):    unsigned short mac_addr; //mac addr of the pallet
